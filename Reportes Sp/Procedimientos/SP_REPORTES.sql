CREATE PROCEDURE SP_REPORTE 
(
	@IN_CODIGO_OPN VARCHAR(10),
	@IN_FECHA_INI DATE,
	@IN_FECHA_FIN DATE
)
AS
	DECLARE @TSQL NVARCHAR(MAX);   					      	-- SQL QUE TENDRA QUERY COMPLETO
	DECLARE @PARAMS NVARCHAR(MAX); 					   		-- PARAMETROS DEL QUERY
	DECLARE @COMPLEMENTO NVARCHAR(MAX) = 'FOR [MES] IN (';  -- COMPLEMENTO DE LOS MESES DEL QURY
	DECLARE @SELECTNULL NVARCHAR(MAX)= '';					-- CONVERTIR LOS CAMPOS NULL EN CERO
	DECLARE @CONTADOR INT = MONTH(@IN_FECHA_INI);			-- MES DONDE INICIA 
	DECLARE @CANTIDAD_TOTAL INT;
	
	-- CANTIDAD DE MESES QUE SE VAN A RETORNAR
	SET @CANTIDAD_TOTAL = 
		(SELECT CAST(COUNT(DISTINCT(DATENAME(MONTH,MPRFEC))) AS INT)
		FROM AUDI_ESM
		WHERE  MPRFEC BETWEEN @IN_FECHA_INI AND  @IN_FECHA_FIN
			AND OPNCOD = @IN_CODIGO_OPN) + @CONTADOR;

	-- CICLO PARA LA CANTIDAD DE COLUMNAS
	WHILE (@CONTADOR < @CANTIDAD_TOTAL )
	BEGIN
		-- SE RELLENA EL COMPLEMENTO CON LA CANTIDAD DE MESES NECESARIA
		SET @COMPLEMENTO = @COMPLEMENTO + '['+CONVERT(VARCHAR,@CONTADOR)+']';
		--
		SET @SELECTNULL = @SELECTNULL + 'ISNULL(['+CONVERT(VARCHAR,@CONTADOR)+'], 0) AS '+DATENAME(MONTH,'01-'+CONVERT(VARCHAR,@CONTADOR)+'-2015');

		--SI NO ES EL ULTIMO MES LE PONE COMA
		IF (@CONTADOR <> (@CANTIDAD_TOTAL -1))
		BEGIN
			--
			SET @COMPLEMENTO = @COMPLEMENTO + ','
			--
			SET @SELECTNULL = @SELECTNULL + ',';
		END		

		-- AUMENTA EL CONTADOR 1 UNIDAD
		SET @CONTADOR = @CONTADOR + 1;
	END
	-- CIERRA EL COMPLEMENTO
	SET @COMPLEMENTO = @COMPLEMENTO + ')';
	
	-- CREA EL QUERY
	SET @TSQL = N'
		SELECT '+@SELECTNULL+'
		FROM (
			SELECT  month(MPRFEC) MES, MPRVAL, CODI_ESM
			FROM AUDI_ESM
			WHERE  MPRFEC BETWEEN @IN_FECHA_INI AND @IN_FECHA_FIN
			AND OPNCOD = @IN_CODIGO_OPN
		) A
		PIVOT(
			MAX(MPRVAL)'+
			@COMPLEMENTO+
		')P';

	SET @PARAMS = N'@IN_CODIGO_OPN NVARCHAR(10),
					@IN_FECHA_INI DATE,
					@IN_FECHA_FIN DATE';

	EXECUTE sp_executesql @TSQL, @PARAMS, @IN_CODIGO_OPN = @IN_CODIGO_OPN, @IN_FECHA_INI = @IN_FECHA_INI, @IN_FECHA_FIN = @IN_FECHA_FIN;				
	--SELECT @TSQL;
	
GO