CREATE OR REPLACE PROCEDURE SP_ACOMER_PEDIDOS
 -- =============================================      
 -- Author:  FELIPE SATIZABAL
 -- =============================================
(
	IN_PUESTOS_ARRAY IN OUT TYPE_PEDIDOS_ARRAY, 	 -- LOS PUESTOS DE DONDE FUERON SOLICITADOS LOS PEDIDOS
	IN_PRODUCTOS_ARRAY IN  OUT TYPE_PEDIDOS_ARRAY,   -- LOS CODIGOS DE LOS PRODUCTOS QUE SE ESTA PIDIENDO 
	IN_CANTIDAD_ARRAR IN OUT TYPE_PEDIDOS_ARRAY,	 -- LA CANTIDAD PEDIDA POR PRODDUCTO
	IN_TERMINO_ARRAY IN OUT TYPE_PEDIDOS_ARRAY,		 -- TERMINO DE LA COMIDA SI HA DE TENERLA 
	IN_CODIGO_MESERO IN SEG0001.USUCED%TYPE,		 -- CODIGO DEL MESERO 
	IN_CODIGO_MESA IN INV00018.MESCOD%TYPE      	 -- CODIGO DE LA MESA DONDE SE ESTA REALIZANDO DEL PEDIDO 	
)
AS
	V_CODIGO_RESTAURANTE VEN0001.VENEMPC%TYPE;  -- OBTENER Y PASAR CODIGOS DE LOS RESTAURANTES RESULTANTES DE LOS PRODUCTOS
	V_CODIGO_PEDIDOS_OUT  VEN0104.PEDNRO%TYPE; 	-- VARIABLE DE SALIDA DEL PROCEDIMIENTO SP_ACOMER_PEDIDOS_CAB
	V_CODIGO_PEDIDOS TYPE_PEDIDOS_ARRAY; 		-- ALMACENA LOS CODIGOS DE LOS PEDIDOS CREADOS 
	V_CONTADOR NUMBER := 1; 		   			-- CONTADOR PARA TENER LA CANTIDAD DE PEDIDOS
	V_VALIDACION NUMBER;						-- VALIDACION DE DATOS
BEGIN
-- =============================================
-- VALIDA QUE LA MESA INSERTADA EXISTE
	SELECT COUNT(*)
	INTO V_VALIDACION
	FROM INV00018
	WHERE MESCOD = IN_CODIGO_MESA;

	IF(V_VALIDACION = 0) THEN
		BEGIN
			RAISE_APPLICATION_ERROR(-20001, 'LA MESA INGRESADA "'||IN_CODIGO_MESA||'" NO ES VALIDA.');
		END;
	END IF;

-- =============================================
-- VALIDA QUE LOS PUESTOS SI EXISTEN 
	FOR I IN IN_PUESTOS_ARRAY.FIRST..IN_PUESTOS_ARRAY.LAST
	LOOP
		SELECT COUNT(*)
		INTO V_VALIDACION
		FROM GEN0009
		WHERE CCOCOD = CAST(IN_PUESTOS_ARRAY(I) AS CHAR(3));
		
		IF(V_VALIDACION = 0) THEN
			BEGIN
				RAISE_APPLICATION_ERROR(-20001, 'EL PUESTO INGRESADO "'||IN_PUESTOS_ARRAY(I)||'" NO ES VALIDO.');
			END;
		END IF;
	END LOOP;

-- =============================================
-- VALIDA QUE LOS PRODUCTOS SI EXISTEN 
	FOR I IN IN_PRODUCTOS_ARRAY.FIRST..IN_PRODUCTOS_ARRAY.LAST
	LOOP
		SELECT COUNT(*)
		INTO V_VALIDACION
		FROM VEN0001
		WHERE PROCOD = CAST(IN_PRODUCTOS_ARRAY(I) AS CHAR(20));
		
		IF(V_VALIDACION = 0) THEN
			BEGIN
				RAISE_APPLICATION_ERROR(-20001, 'EL ITEM INGRESADO "'||IN_PRODUCTOS_ARRAY(I)||'" NO ES VALIDO.');
			END;
		END IF;
	END LOOP;

-- =============================================
-- CONSUTO EL CODIGO DE LOS RESTAURANTE DONDE PERTENECE EL PRODUCTO
	FOR I IN IN_PRODUCTOS_ARRAY.FIRST..IN_PRODUCTOS_ARRAY.LAST
	LOOP
		-- CONSULTO EL CODIGO DEL RESTAURANTE AL Q PERTENECE EL PRODUCTO
		SELECT VENEMPC
		INTO V_CODIGO_RESTAURANTE
		FROM VEN0001
		WHERE PROCOD = CAST(IN_PRODUCTOS_ARRAY(I) AS CHAR(20));

		-- SE INSERTA EN LA TABLA TEMPORAL LOS CODIGOS DE LOS RESTAURANTES
		INSERT INTO TT_COD_RES (COD_RES)
		VALUES (V_CODIGO_RESTAURANTE);
	END LOOP;

-- =============================================
-- INSERTO LAS CABECERAS DE LOS PEDIDOS
	DECLARE
		CURSOR CURSOR_PEDIDOS IS
			SELECT DISTINCT COD_RES
			FROM TT_COD_RES;
	BEGIN
		OPEN CURSOR_PEDIDOS;
		LOOP	
			-- LEEMOS EL CURSOR 
			FETCH CURSOR_PEDIDOS INTO V_CODIGO_RESTAURANTE;
			--SALE DEL LOOP SI NO ENCUENTRA NADA EN EL CURSOR
			EXIT WHEN CURSOR_PEDIDOS%NOTFOUND;
			-- CREAMOS LA CABECERA DEL PEDIDO PARA CADA RESTAURANTE
			SP_ACOMER_PEDIDOS_CAB(V_CODIGO_RESTAURANTE, 'PD', IN_CODIGO_MESERO, IN_CODIGO_MESA, V_CODIGO_PEDIDOS_OUT);
			-- INSERTAMOS LOS CODIGOS DE PEDIDO GENERADOS EN LA CABECERA
			UPDATE TT_COD_RES
			SET COD_PED = V_CODIGO_PEDIDOS_OUT
			WHERE COD_RES = V_CODIGO_RESTAURANTE;
		END LOOP;
		CLOSE CURSOR_PEDIDOS;
	END;

-- =============================================
-- INSERTO EL DETALLE DE LOS PEDIDOS
	DECLARE
		CR_COD_RES TT_COD_RES.COD_RES%TYPE;  -- VARIABLE QUE TENDRA LOS VALORES LEIDOS DEL CURSOR
		CR_COD_PED TT_COD_RES.COD_PED%TYPE;	 -- VARIABLE QUE TENDRA LOS VALORES LEIDOS DEL CURSOR
		CR_VALIDA VEN0001.VENEMPC%TYPE;  	 -- COMPARAR VARIABLES
		CURSOR CURSOR_PEDIDOS_DET IS
			SELECT DISTINCT *
			FROM TT_COD_RES;
	BEGIN
		OPEN CURSOR_PEDIDOS_DET;
		LOOP
			-- LEEMOS EL CURSOR 
			FETCH CURSOR_PEDIDOS_DET INTO CR_COD_RES, CR_COD_PED;
			--SALE DEL LOOP SI NO ENCUENTRA NADA EN EL CURSOR
			EXIT WHEN CURSOR_PEDIDOS_DET%NOTFOUND;
			-- RECORREMOS LOS ITEMS E INSERTAMOS EN EL DETALLE DEL PEDIDO
			FOR I IN IN_PRODUCTOS_ARRAY.FIRST..IN_PRODUCTOS_ARRAY.LAST
			LOOP
				-- CONSULTAMOS EL CODIGO DEL RESTAURANTE AL QUE EL PRODUCTO O ITEM PERTENECE 
				SELECT VENEMPC
				INTO CR_VALIDA
				FROM VEN0001
				WHERE PROCOD = CAST(IN_PRODUCTOS_ARRAY(I) AS CHAR(20));
				-- SI LOS CODIGOS DE LOS RESTAURANTES COINCIDEN SE GUARDA EL DETALLE DEL PEDIDO
				IF(CR_VALIDA = CR_COD_RES) THEN
					BEGIN
						-- INSERTA EL DETALLE DEL PEDIDO 
						SP_ACOMER_PEDIDOS_DET(CR_COD_RES, 'PD', CR_COD_PED, IN_PRODUCTOS_ARRAY(I), IN_TERMINO_ARRAY(I),
							IN_PUESTOS_ARRAY(I), IN_CANTIDAD_ARRAR(I), IN_CODIGO_MESERO);
					END;
				END IF;
				
			END LOOP;
		END LOOP;
		CLOSE CURSOR_PEDIDOS_DET;
	END;	


-- MESUSUREQ  RESTAURANTE SMILLE CITY	901.023.461-1
-- MESUSUREQ1 RESTAURANTE 				901.023.461-2
-- MESUSUREQ2 RESTAURANTE
-- =============================================
-- ACTUALIZA LA MESA A OCUPADA UNA VEZ SE TOMA EL PEDIDO
	DECLARE	
		-- DATOS PARA EL MANEJO DEL CURSOR
		CR_COD_RES TT_COD_RES.COD_RES%TYPE;  -- VARIABLE QUE TENDRA LOS VALORES LEIDOS DEL CURSOR
		CR_COD_PED TT_COD_RES.COD_PED%TYPE;	 -- VARIABLE QUE TENDRA LOS VALORES LEIDOS DEL CURSOR
		CURSOR CURSOR_PEDIDOS_DET IS
			SELECT DISTINCT *
			FROM TT_COD_RES;
		-- DATOS PARA LA CONSULTA DEL NUMDOC
		V_NUMDOC VEN0104.PEDNUMDOC%TYPE; -- ALAMACENAR EL NUMERO DE DOCUMENTO DEL PEDIDO PARA LA MESA
	BEGIN
		OPEN CURSOR_PEDIDOS_DET;
		LOOP
			-- LEEMOS EL CURSOR 
			FETCH CURSOR_PEDIDOS_DET INTO CR_COD_RES, CR_COD_PED;
			--SALE DEL LOOP SI NO ENCUENTRA NADA EN EL CURSOR
			EXIT WHEN CURSOR_PEDIDOS_DET%NOTFOUND;

			-- =============================================
			-- CONSULTO EL NUMERO DEL DOCUMENTO ASIGANADO AL PEDIDO DE LA MESA
			SELECT PEDNUMDOC
			INTO V_NUMDOC
			FROM VEN0104
			WHERE PEDEMPC = CR_COD_RES
				AND PEDNRO = CR_COD_PED
				AND MESCOD = IN_CODIGO_MESA;

			-- COMPARAMOS LOS CODIGOS DE LOS RESTAURANTES Y ACTUALIZAMOS LOS NUMEROS DE LOS PEDIDOS EN LAS MESAS 
			CASE CR_COD_RES
				WHEN '901.023.461-1' THEN
					BEGIN
						UPDATE INV00018
						SET MESESTADO = 'Ocupado',
						    MESUSUREQ = IN_CODIGO_MESERO,
						    MESDOCREQ = 'PD',
						    MESNUMREQ = V_NUMDOC,
						    MESHORAPED = TO_CHAR(SYSDATE,'HH24:MI:SS')
						WHERE MESCOD = IN_CODIGO_MESA;
					END;

				WHEN '901.023.461-2' THEN
					BEGIN
						UPDATE INV00018
						SET MESESTADO = 'Ocupado',
						    MESUSUREQ = IN_CODIGO_MESERO,
						    MESDOCREQ = 'PD',
						    MESNUMREQ2 = V_NUMDOC,
						    MESHORAPED = TO_CHAR(SYSDATE,'HH24:MI:SS')
						WHERE MESCOD = IN_CODIGO_MESA;
					END;

				ELSE 
					BEGIN
						UPDATE INV00018
						SET MESESTADO = 'Ocupado',
						    MESUSUREQ = IN_CODIGO_MESERO,
						    MESDOCREQ = 'PD',
						    MESNUMREQ3 = V_NUMDOC,
						    MESHORAPED = TO_CHAR(SYSDATE,'HH24:MI:SS')
						WHERE MESCOD = IN_CODIGO_MESA;
					END;
			END CASE;
			
		END LOOP;
		CLOSE CURSOR_PEDIDOS_DET;
	END;	
END;