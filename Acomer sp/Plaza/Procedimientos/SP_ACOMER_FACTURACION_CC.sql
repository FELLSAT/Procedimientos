create or replace PROCEDURE SP_ACOMER_FACTURACION
 -- =============================================      
 -- Author:  FELIPE SATIZABAL
 -- =============================================
(
	IN_CEDULA_CLIENTE IN VEN0104.PCLICOD%TYPE,  -- CEDULA DEL CLINETE QUE VA A FACTURAR
	IN_NOMBRE_COMPLETO IN VEN0104.PCLINOM%TYPE, -- NOMBRE COMPLETO DEL CLIENTE
	IN_CODIGO_MESA IN VEN0104.MESCOD%TYPE, 		-- CODIGO DE LA MESA DEL PEDIDO 
	IN_CELULA_MESERO IN SEG0001.USUCED%TYPE,    -- CEDULA DEL MESERIO
	IN_FORMA_PAGO VEN0104.PFPGCOD%TYPE,      	-- FORMA DE PAGO
	IN_PUESTOS_ARRAY IN PKG_ACOMER_RESTAURANTES.TYPE_PEDIDOS_ARRAY,		-- PUESTOS QUE SE VAN A FACTURAR
	OUT_CURSOR_FACTURA OUT SYS_REFCURSOR,		-- CURSOR CON LOS DATOS DE LA CABECERA DE FACTURA
	OUR_CURSOR_FACTURA_C OUT SYS_REFCURSOR,     -- CURSOR PARA EL DETALLE DE LA FACTURA
	OUT_TOTAL_PAGAR OUT NUMBER 					-- TOTAL A PAGAR 
)
AS
	V_TAMANO NUMBER;					   -- TAMANO DEL ARRAY DE LOS PUESTO 
	V_PRECIO_CLIENTE GEN0024.LIPCOD%TYPE;  -- PRECIO QUE SE LE ESTABLECE AL CLIENTE		
	V_ULTIMA_FACTUACION NUMBER := 0;       -- SABER SI SE CIERRAMESA O NO
	V_NUM_FACGRAL CAB_FACTURA_GRAL.FACNROGRAL%TYPE;  -- NUMERO DE LA FACTURA GENERAK
BEGIN
	-- ===================================
	--  IDENTIFICAR SI SE VA A FACTURAR EN UNA SOLA FACTURA O EN DIFERENTES FACTURAS
	BEGIN
		V_TAMANO := TO_NUMBER(IN_PUESTOS_ARRAY(1));
	EXCEPTION
		WHEN OTHERS THEN 
			V_TAMANO := 0;
	END;
	
	-- SI EL TAMANO DEL ARRAY ES 0 SE GENERA UNA SOLA FACTURA 
	IF (V_TAMANO = 0) THEN
		BEGIN		
			-- ===================================
			-- VERIFICA EL PRECIO QUE SE LE DEBE COBRAR AL CLIENTE
			BEGIN
				-- VERIFICA QUE EL CLIENTE ESTE REGISTRADO Y TENGA PRECIO ESPECIAL PARA REALIZAR CAMBIOS
				SELECT LIPCOD
				INTO V_PRECIO_CLIENTE
				FROM GEN0024 A
				LEFT JOIN GEN0003 B 
				  	ON A.CLIPAICOD = B.PAICOD 
				  	AND A.CLIDPTCOD = B.DPTCOD 
				  	AND A.CLIMPOCOD = B.MPOCOD  
				WHERE A.CLICOD= IN_CEDULA_CLIENTE 
					AND A.SUCTERCOD='01';
			EXCEPTION 
				WHEN NO_DATA_FOUND THEN 
					V_PRECIO_CLIENTE := '01';
			END;

			-- ===================================						
			-- SE EJECUTA LA LOGICA DE LA FACTURACION PARA TODO LA MESA
			DECLARE
				V_CEDULA_CLIENTE VEN0104.PCLICOD%TYPE;   -- CEDULA DEL CLIENTE 
				V_CODIGO_MESA VEN0104.MESCOD%TYPE;		 -- MESA DEL PEDIDO			
				V_NOMBRE_COMPLETO VEN0104.PCLINOM%TYPE;  -- NOMBRE COMPLETO DEL CLIENTE		
				V_FORMA_PAGO VEN0104.PFPGCOD%TYPE;       -- FORMA DE PAGOS				
				V_PUESTOS_ARRAY PKG_ACOMER_RESTAURANTES.TYPE_PEDIDOS_ARRAY;
				ARRAY_PEDIDOS PKG_ACOMER_RESTAURANTES.TYPE_PEDIDOS_ARRAY; -- ARRAY CON LOS CODIGOS DE LOS PEDIDOS DE LA MESA
				ARRAY_EMPRESA PKG_ACOMER_RESTAURANTES.TYPE_PEDIDOS_ARRAY; -- ARRAY CON LOS CODIGOS DE LAS EMPRESAS DE LOS PEDIDOSA
			BEGIN
			 	-- ==========================					
				-- ASIGNO LOS VALORES CORRESPONDIENTES PARA LOS PARAMETROS DE LA ACTUALIZACION DE PRECIOS
				V_CEDULA_CLIENTE := IN_CEDULA_CLIENTE;
				V_NOMBRE_COMPLETO := IN_NOMBRE_COMPLETO;
				V_CODIGO_MESA := IN_CODIGO_MESA;										
				V_FORMA_PAGO := IN_FORMA_PAGO;
				V_PUESTOS_ARRAY := IN_PUESTOS_ARRAY;

				-- ==========================
				-- SE CONSULTA LOSNUMERO DE LOS PEDIDOS QUE TENGA LA MESA EN CADA RESTAURANTE
				SELECT NVL(MESNUMREQ,'NULL'), 
					NVL(MESNUMREQ2,'NULL'),
				    NVL(MESNUMREQ3,'NULL'), 
				    NVL(MESNUMREQ4,'NULL'),
				    '901.023.461-1','901.023.461-2'
				INTO ARRAY_PEDIDOS(0), ARRAY_PEDIDOS(1),
					ARRAY_PEDIDOS(2), ARRAY_PEDIDOS(3),
					ARRAY_EMPRESA(0), ARRAY_EMPRESA(1)  -- ADICIONAR LAS DEMAS EMPRESAS
				FROM INV00018
				WHERE MESCOD = IN_CODIGO_MESA;

				-- ============================
				-- LLENAR LA TABLA CON LOS NUMERO DE 
				FOR I IN ARRAY_PEDIDOS.FIRST..ARRAY_PEDIDOS.LAST
				LOOP
					-- SI ESDIFERENTE DE NULO NO SE INSERTA
					IF(ARRAY_PEDIDOS(I) <> 'NULL') THEN
						INSERT INTO TT_FACTURA_DOCUMENTOS
						(NUMERO_DOC,CODIGO_EMP)
						VALUES(CAST(ARRAY_PEDIDOS(I) AS CHAR(10)),CAST(ARRAY_EMPRESA(I) AS CHAR(13)));
					END IF;
				END LOOP;

				-- ==========================		
				-- SI EL TIPO DE PRECIO ES 01 SE PROCEDE A FACTURAR 	
				IF(V_PRECIO_CLIENTE <> '01') THEN
					--SE ACTUALIZAN LOS PRECIOS DE LOS PEDIDOS					
					SP_ACOMER_FACTURACION_ACT(V_PRECIO_CLIENTE,V_CODIGO_MESA,V_PUESTOS_ARRAY);
				END IF;

				-- ==========================
				-- SE RECORRE LOS PEDIDOS PARA ACTUALIZAR EL PEDIDO CON LOS DATOS DEL CLIENTES
				FOR I IN ARRAY_PEDIDOS.FIRST..ARRAY_PEDIDOS.LAST
				LOOP
					-- SI ES NULL NO TIENE PEDIDO EN EL RESTAURANTE X
					IF(ARRAY_PEDIDOS(I) <> 'NULL') THEN 
						-- SI NO ESTA REGISTRADO
						IF(V_PRECIO_CLIENTE <> '01') THEN
							--SE ACTUAIZA LA INFORMACION DEL CLIENTE EN EL PEDIDO 
							SP_ACOMER_ACT_PEDIDO_CLI(1,V_CEDULA_CLIENTE,V_NOMBRE_COMPLETO,V_FORMA_PAGO,ARRAY_EMPRESA(I),ARRAY_PEDIDOS(I));
						ELSE
							--SE ACTUAIZA LA INFORMACION DEL CLIENTE EN EL PEDIDO 
							SP_ACOMER_ACT_PEDIDO_CLI(0,V_CEDULA_CLIENTE,V_NOMBRE_COMPLETO,V_FORMA_PAGO,ARRAY_EMPRESA(I),ARRAY_PEDIDOS(I));
						END IF;
					END IF;
				END LOOP;

				-- ==========================
				--SE EJECUTA EL PROCEDIMIWNTO DE FACTURACION
				FOR I IN ARRAY_PEDIDOS.FIRST..ARRAY_PEDIDOS.LAST
				LOOP
					-- SI ES NULL NO TIENE PEDIDO EN EL RESTAURANTE X
					IF(ARRAY_PEDIDOS(I) <> 'NULL') THEN 
						--GENERA LA FACTURACIOIN PARA LOSD PEDIDO EN CADA RESTAURANTE
						SP_ACOMER_FACTURACION_CAB_DET('PD','169',ARRAY_EMPRESA(I),ARRAY_PEDIDOS(I),V_CEDULA_CLIENTE,V_CODIGO_MESA);
					END IF;
				END LOOP;		

				-- =========================
				-- SE LIBERA LA MESA 		
				SP_ACOMER_FACTURA_MESA_FIN(V_CODIGO_MESA, 0);
			END;		
		END;
	ELSE
		BEGIN
			DECLARE
				V_NUMERO_PEDIDO1 INV00018.MESNUMREQ%TYPE; -- CODIGO DEL PEDIDO EN RESTAURANTE 1
				V_NUMERO_PEDIDO2 INV00018.MESNUMREQ2%TYPE; -- CODIGO DEL PEDIDO EN RESTAURANTE 2
				V_NUMERO_PEDIDO3 INV00018.MESNUMREQ3%TYPE; -- CODIGO DEL PEDIDO EN RESTAURANTE 3
				V_NUMERO_PEDIDO4 INV00018.MESNUMREQ4%TYPE; -- CODIGO DEL PEDIDO EN RESTAURANTE 4
				V_CONTADOR1 NUMBER;	-- CONTADOR DE PEDIDOS EN LA MESA				
				V_CEDULA_CLIENTE VEN0104.PCLICOD%TYPE;   -- CEDULA DEL CLIENTE 
				V_CODIGO_MESA VEN0104.MESCOD%TYPE;		 -- MESA DEL PEDIDO			
				V_NOMBRE_COMPLETO VEN0104.PCLINOM%TYPE;  -- NOMBRE COMPLETO DEL CLIENTE		
				V_FORMA_PAGO VEN0104.PFPGCOD%TYPE;       -- FORMA DE PAGOS				
				V_PUESTOS_ARRAY PKG_ACOMER_RESTAURANTES.TYPE_PEDIDOS_ARRAY;
			BEGIN	
				-- ==========================					
				-- ASIGNO LOS VALORES CORRESPONDIENTES PARA LOS PARAMETROS DE LA ACTUALIZACION DE PRECIOS
				V_CEDULA_CLIENTE := IN_CEDULA_CLIENTE;
				V_NOMBRE_COMPLETO := IN_NOMBRE_COMPLETO;
				V_CODIGO_MESA := IN_CODIGO_MESA;										
				V_FORMA_PAGO := IN_FORMA_PAGO;
				V_PUESTOS_ARRAY := IN_PUESTOS_ARRAY;

				-- ===================================
				-- VERIFICA EL PRECIO QUE SE LE DEBE COBRAR AL CLIENTE
				BEGIN
					-- VERIFICA QUE EL CLIENTE ESTE REGISTRADO Y TENGA PRECIO ESPECIAL PARA REALIZAR CAMBIOS
					SELECT LIPCOD
					INTO V_PRECIO_CLIENTE
					FROM GEN0024 A
					LEFT JOIN GEN0003 B 
					  	ON A.CLIPAICOD = B.PAICOD 
					  	AND A.CLIDPTCOD = B.DPTCOD 
					  	AND A.CLIMPOCOD = B.MPOCOD  
					WHERE A.CLICOD= IN_CEDULA_CLIENTE 
						AND A.SUCTERCOD='01';
				EXCEPTION 
					WHEN NO_DATA_FOUND THEN 
						V_PRECIO_CLIENTE := '01';
				END;

				-- ==========================		
				-- SI EL TIPO DE PRECIO ES 01 SE PROCEDE A FACTURAR 	
				IF(V_PRECIO_CLIENTE <> '01') THEN
					--SE ACTUALIZAN LOS PRECIOS DE LOS PEDIDOS					
					SP_ACOMER_FACTURACION_ACT(V_PRECIO_CLIENTE,V_CODIGO_MESA,V_PUESTOS_ARRAY);
				END IF;

				-- =========================
				-- TENER EN UNA TABLA TODOS LOS PUESTOS QUE SE FACTURAN
				FOR I IN IN_PUESTOS_ARRAY.FIRST..IN_PUESTOS_ARRAY.LAST 
				LOOP
					-- INSERTA EN LA TABLA TEMPORAL TODOS LOS PUESTOS QUE VA A FACTURAR
					INSERT INTO TT_PUESTOS_FACTURA (CODIGO_PUESTO)
					VALUES (CAST(IN_PUESTOS_ARRAY(I) AS CHAR(3)));
				END LOOP;

				-- =======================
				-- 
				DECLARE
					CV_EMPRESA VEN0104.PEDEMPC%TYPE; -- ALMACENA LOS DATOS DEL CURSOR
					CV_CODIGO_PED VEN0104.PEDNUMDOC%TYPE;   -- ALMACENA LOS DATOS DEL CURSOR
					-- CODIGO DEL PEDIDO DONDE ESTA EL PUESTO Y LA EMPRESA A LA QUE PERTENECE
					CURSOR CUR_PEDIDOS_PUESTO IS
						SELECT DISTINCT PEDNUMDOC, A.PEDEMPC
						FROM VEN0104 A
						INNER JOIN VEN0004 B
						    ON B.PEDNRO = A.PEDNRO    
						    AND B.CCOCOD IN (SELECT * FROM TT_PUESTOS_FACTURA)
						    AND B.PEDSAL NOT IN ('F')
						WHERE A.MESCOD = V_CODIGO_MESA;						    
				BEGIN
					-- =======================
					-- RECORRER EL CURSOR
					OPEN CUR_PEDIDOS_PUESTO;
				    FETCH CUR_PEDIDOS_PUESTO INTO CV_CODIGO_PED, CV_EMPRESA;
				    WHILE CUR_PEDIDOS_PUESTO%FOUND 
				    LOOP			
				    	-- CANTIDAD DE PEDIDOS CON ESE CODIGO 
				    	SELECT COUNT(A.CCOCOD)
				    	INTO V_CONTADOR1
						FROM VEN0004 A
						INNER JOIN VEN0104 B
						    ON B.PEDNRO = A.PEDNRO    
						    AND B.PEDNUMDOC IN (CV_CODIGO_PED);

						IF(V_CONTADOR1 > 1) THEN
							BEGIN
								DECLARE 
									V_DOCUMENTO_PEDIDO_NEW GEN0012.DOCNRO%TYPE; -- NUMERO DE DOCUMENTO PEDIDO NUEVO 
									V_NUMERO_PEDIDO_NEW VEN0104.PEDNRO%TYPE;	-- NUMERO DE PEDIDO NUEVO 
									V_NUMERO_PEDIDO_OLD VEN0104.PEDNRO%TYPE;	-- NUMERO DE PEDIDO VIEJO 
								BEGIN
									-- CONSULTANUMERO DEL DOCUMENTO DE PEDIDO DEL RESTAURANTE
									SELECT TO_NUMBER(GEN0012.DOCNRO + 1)
									INTO V_DOCUMENTO_PEDIDO_NEW
									FROM GEN0012
									WHERE GEN0012.DOCCOD = 'PD'
										AND GEN0012.EMPPAIC = '169'
										AND GEN0012.EMPCOD = CV_EMPRESA;	

									-- SE ACTUALIZA EL NUMERO DE DOCUMENTO DEL PEDIDO 
									UPDATE GEN0012
										SET  DOCNRO = V_DOCUMENTO_PEDIDO_NEW
									WHERE GEN0012.DOCCOD = 'PD'
										AND GEN0012.EMPPAIC = '169'
										AND GEN0012.EMPCOD = CV_EMPRESA;

									-- SE INSERTA EN LA TABLA LOS NUMEROS DE DOCUMETNO QUE SE HAN GENERADO
									INSERT INTO TT_DOCU_NUM_PED
									(NEW_ODC_NUM)
									VALUES (V_DOCUMENTO_PEDIDO_NEW);

									-- SE CONSULTA EL MAXIMO 
									SELECT NVL(MAX(PEDNRO),0) + 1
									INTO V_NUMERO_PEDIDO_NEW
									FROM VEN0104;

									-- SE INSERTA LA CABECERA DEL PEDIDO 
									INSERT INTO VEN0104(
										PEDPAIC, PEDEMPC,
										PEDCODDOC, PEDNRO,
										PEDNUMDOC, PEDFECH,
										PEDFECE, COTPAIC,
										COTEMPC, PEDVENCOD,
										PEDFAC, PEDLC,
										PEDDEDT, PEDFLE,
										PEDMODCOD, PEDORDCOM,
										PEDOTM, PEDTDEOM,
										USUPAIC, USUEMPC,
										VENUSUARIO, PEDHORA,
										MESCOD)
									SELECT DISTINCT B.PEDPAIC, B.PEDEMPC,
								        B.PEDCODDOC, V_NUMERO_PEDIDO_NEW,
								        V_DOCUMENTO_PEDIDO_NEW, B.PEDFECH,
								        B.PEDFECE, B.COTPAIC,
								        B.COTEMPC, B.PEDVENCOD,
								        B.PEDFAC, B.PEDLC,
								        B.PEDDEDT, B.PEDFLE,
								        B.PEDMODCOD, B.PEDORDCOM,
								        B.PEDOTM, B.PEDTDEOM,
								        B.USUPAIC, B.USUEMPC,
								        B.VENUSUARIO, B.PEDHORA,
								        B.MESCOD
								    FROM VEN0004 A
								    INNER JOIN VEN0104 B
								        ON B.PEDNRO = A.PEDNRO  
								        AND B.PEDNUMDOC IN (CV_CODIGO_PED)
								        AND B.PEDEMPC IN (CV_EMPRESA)
								    WHERE A.CCOCOD IN (SELECT * FROM TT_PUESTOS_FACTURA);

								    -- SE INSERTA LA CABECERA DEL NUEVO PEDIDO
								    INSERT INTO VEN0004(
								    	PEDPAIC, PEDEMPC,
										PEDCODDOC, PEDNRO,
										PEDLIN, PEPC,
										PEC, PEDPROCOD,
										CCOCOD, PEDUNI,
										PEDVAL, PEDVALCPI,
										PEDPORIVA, PEDVALIVA,
										PEDVALTUN, PEDPORDC,
										PEDDCVAL, PEDSUCDET,
										PEDALIAS, PEDCHECK,
										PEDSAL)
								    SELECT A.PEDPAIC, A.PEDEMPC,
								        A.PEDCODDOC, V_NUMERO_PEDIDO_NEW,
								        A.PEDLIN, A.PEPC,
								        A.PEC, A.PEDPROCOD,
								        A.CCOCOD, A.PEDUNI,
								        A.PEDVAL, A.PEDVALCPI,
								        A.PEDPORIVA, A.PEDVALIVA,
								        A.PEDVALTUN, A.PEDPORDC,
								        A.PEDDCVAL, A.PEDSUCDET,
								        A.PEDALIAS, A.PEDCHECK,
								        A.PEDSAL
								    FROM VEN0004 A
								    INNER JOIN VEN0104 B
								        ON B.PEDNRO = A.PEDNRO  
								        AND B.PEDNUMDOC IN (CV_CODIGO_PED)
								        AND B.PEDEMPC IN (CV_EMPRESA)
								    WHERE A.CCOCOD IN (SELECT * FROM TT_PUESTOS_FACTURA);
    
								    -- CONSULTO EL NUMERO DE PEDIDO QUE TENIA 								    
								    SELECT DISTINCT A.PEDNRO
								    INTO V_NUMERO_PEDIDO_OLD
								    FROM VEN0004 A
								    INNER JOIN VEN0104 B
								        ON B.PEDNRO = A.PEDNRO  
								        AND B.PEDNUMDOC IN (CV_CODIGO_PED)
								        AND B.PEDEMPC IN (CV_EMPRESA)
								    WHERE A.CCOCOD IN (SELECT * FROM TT_PUESTOS_FACTURA);

								    -- ELIMINAMOS EL DETALLE DE ESTE PUESTO 
								    DELETE FROM VEN0004
								    WHERE CCOCOD IN (SELECT * FROM TT_PUESTOS_FACTURA)
								        AND PEDEMPC IN (CV_EMPRESA)
								        AND PEDNRO = V_NUMERO_PEDIDO_OLD;

								    -- INSERTA LOS DATOS DE LA FACTURACION 
								    INSERT INTO TT_FACTURA_DOCUMENTOS
								    	(NUMERO_DOC, CODIGO_EMP)
								    VALUES (V_DOCUMENTO_PEDIDO_NEW, CV_EMPRESA);

								    -- SE ACTUALIZA LA INFORMACION DEL CLIENTE
								    IF(V_PRECIO_CLIENTE <> '01') THEN
								    	SP_ACOMER_ACT_PEDIDO_CLI(1,V_CEDULA_CLIENTE,V_NOMBRE_COMPLETO,V_FORMA_PAGO,CV_EMPRESA,V_DOCUMENTO_PEDIDO_NEW);
								    ELSE
								    	SP_ACOMER_ACT_PEDIDO_CLI(0,V_CEDULA_CLIENTE,V_NOMBRE_COMPLETO,V_FORMA_PAGO,CV_EMPRESA,V_DOCUMENTO_PEDIDO_NEW);
								    END IF;

								    -- SE GENERA LA FACTURA 
								    SP_ACOMER_FACTURACION_CAB_DET('PD','169',CV_EMPRESA,V_DOCUMENTO_PEDIDO_NEW,V_CEDULA_CLIENTE,V_CODIGO_MESA);

								    -- SE LIVERA LA MESA 
									SP_ACOMER_FACTURA_MESA_FIN(V_CODIGO_MESA, 1);
								END;
							END;
						ELSE
							-- INSERTA LOS DATOS DE LA FACTURACION 
						    INSERT INTO TT_FACTURA_DOCUMENTOS
						    	(NUMERO_DOC, CODIGO_EMP)
						    VALUES (CV_CODIGO_PED, CV_EMPRESA);						

							-- SE ACTUALIZA LA INFORMACION DEL CLIENTE
						    IF(V_PRECIO_CLIENTE <> '01') THEN
						    	SP_ACOMER_ACT_PEDIDO_CLI(1,V_CEDULA_CLIENTE,V_NOMBRE_COMPLETO,V_FORMA_PAGO,CV_EMPRESA,CV_CODIGO_PED);
						    ELSE
						    	SP_ACOMER_ACT_PEDIDO_CLI(0,V_CEDULA_CLIENTE,V_NOMBRE_COMPLETO,V_FORMA_PAGO,CV_EMPRESA,CV_CODIGO_PED);
						    END IF;

						    -- SE GENERA LA FACTURA 
						    SP_ACOMER_FACTURACION_CAB_DET('PD','169',CV_EMPRESA,CV_CODIGO_PED,V_CEDULA_CLIENTE,V_CODIGO_MESA);
							    
							-- SE LIVERA LA MESA 
							SP_ACOMER_FACTURA_MESA_FIN(V_CODIGO_MESA, 1);
						END IF;


				        FETCH CUR_PEDIDOS_PUESTO INTO CV_CODIGO_PED, CV_EMPRESA;

				    END LOOP;
				    CLOSE CUR_PEDIDOS_PUESTO;
				END;								
			END;
			
		END;
	END IF;


	-- ==========================
	-- CONSULTA EL NUMERO DE FACTURA GENERAL SIGUIENTE
	SELECT NVL(MAX(FACNROGRAL),0) + 1
	INTO V_NUM_FACGRAL
	FROM CAB_FACTURA_GRAL;

	-- ==========================
	-- INSERTO EN LA TABLA LOS VALORES QUE PERTENECEN A LA FACTURA GENERAL
	INSERT INTO CAB_FACTURA_GRAL(
	    FACNROGRAL, FACEMPCGRAL, 
	    FACNRO, FACNUMDOCGRAL,
	    FACFECHA, FACHORA)
	SELECT V_NUM_FACGRAL, A.CODIGO_EMP,
	    B.FACNRO, A.NUMERO_DOC,
	    TO_CHAR(SYSDATE, 'DD/MM/YYYY'),
	    TO_CHAR(SYSDATE, 'HH24:MI:SS')
	FROM TT_FACTURA_DOCUMENTOS A
	INNER JOIN VEN0008 B 
	    ON B.FACNUMDOC IN (A.NUMERO_DOC)
	    AND B.FACEMPC IN (A.CODIGO_EMP);

	-- ==========================
	-- CABECERA DE LA FACTURA
	OPEN OUT_CURSOR_FACTURA FOR
		SELECT DISTINCT FACNROGRAL NUMERO_FAC,
		    FACFECHA FECHA,
		    FACHORA HORA
		FROM CAB_FACTURA_GRAL
		WHERE FACEMPCGRAL IN (SELECT CODIGO_EMP FROM TT_FACTURA_DOCUMENTOS)
		    AND FACNUMDOCGRAL IN (SELECT NUMERO_DOC FROM TT_FACTURA_DOCUMENTOS);

	-- ==========================
	-- DETALLE DE LA FACTURA 
	OPEN OUR_CURSOR_FACTURA_C FOR
		SELECT C.PRODES, A.PEDUNI,
		    A.PEDVALTUN
		FROM VEN0004 A
		INNER JOIN VEN0104 B
		    ON A.PEDNRO = B.PEDNRO
		    AND B.PEDEMPC IN (SELECT CODIGO_EMP FROM TT_FACTURA_DOCUMENTOS)
		    AND B.PEDNUMDOC IN (SELECT NUMERO_DOC FROM TT_FACTURA_DOCUMENTOS)
		INNER JOIN VEN0001 C 
		    ON A.PEDPROCOD = C.PROCOD;

	-- ==========================
	-- TOTAL A PAGAR 
	SELECT SUM(PEDVALTUN)
	INTO OUT_TOTAL_PAGAR
	FROM VEN0004 A
	INNER JOIN VEN0104 B
	    ON A.PEDNRO = B.PEDNRO
	    AND B.PEDEMPC IN (SELECT CODIGO_EMP FROM TT_FACTURA_DOCUMENTOS)
	    AND B.PEDNUMDOC IN (SELECT NUMERO_DOC FROM TT_FACTURA_DOCUMENTOS);

	COMMIT;
		
END;