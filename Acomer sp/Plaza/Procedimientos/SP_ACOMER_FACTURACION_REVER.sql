CREATE OR REPLACE PROCEDURE SP_ACOMER_FACTURACION_REVER
 -- =============================================      
 -- Author:  FELIPE SATIZABAL
 -- =============================================
(
	IN_NUMERO_FACTURA IN TAB_FACTURA_CLIENTE.FACNROCLI%TYPE, -- NUMERO DE LA FACTURA DEL CLIENTE
	IN_NUMERO_REVER IN NUMBER								 -- NUMERO DE REVER PARA LOS DATOS ALMACENADOS ANTES DEL CAMBIO
)
AS	
	V_MESA_PRINCIPAL UNIONMESA.MESCOD%TYPE; -- IDENTIFICAR SI ES UNA MESA UNIDA Y DE SERLO CUAL ES LA PRINCIPAL
	-- CURSOR DE LAS MESAS QUE ESTAN INVOLUCRADAS EN EL REVER PARA INV00018
	DATA_CURSOR TABCOPYINV00018.MESCOD%TYPE;
	CURSOR CURSOR1(CUR_NROREVER NUMBER) IS
		SELECT DISTINCT MESCOD 
		FROM TABCOPYINV00018
		WHERE NUMEROREVER = CUR_NROREVER;
	-- CURSOR DE LAS MESAS QUE ESTAN INVOLUCRADAS EN EL REVER PARA VEN0104
	DATA_CURSOR2 NUMBER;
	CURSOR CURSOR2(CUR_NROREVER NUMBER, CUR_NROFACTURA NUMBER) IS
			SELECT PEDNRO 
			FROM TABCOPYVEN0104
			WHERE NUMEROREVER = CUR_NROREVER
		UNION ALL
			SELECT PEDNRO 
			FROM VEN0104 A
			WHERE A.PEDNUMDOC IN (SELECT A.FACNUMDOCGRAL
			FROM CAB_FACTURA_GRAL A
			INNER JOIN TAB_FACTURA_CLIENTE B
		  		ON A.FACNROGRAL = B.FACNROGRAL
			WHERE B.FACNROCLI = CUR_NROFACTURA);
BEGIN
	
	-- SE GUARDA EN FACTURAS REVERSADAS
	INSERT INTO TAB_FACTURAS_REVERSADAS
	VALUES(
		IN_NUMERO_FACTURA, TO_CHAR(SYSDATE,'DD/MM/YYYY'),
		TO_CHAR(SYSDATE,'HH24:MI:SS'));

	-- ===========================================================
	-- ELIMINACION DE LOS DAOS DE INV00018 E INSERCION DE LOS ANTERIORES
	-- ABRE EL CURSOR
	OPEN CURSOR1(IN_NUMERO_REVER);
	-- SE CARGA EL PRIMER DATO DE LA FILA 
	FETCH CURSOR1 INTO DATA_CURSOR;
	--CICLO PARA RECORRER LA CONSULTA DEVUELTA
	LOOP
		-- SI NO ENCUNTRA MAS DATOS SALE DEL LOOP
		EXIT WHEN CURSOR1%NOTFOUND;
		-- SE ACTUALIZAN LOS DATOS EN INV00018 DE LA MESA X
		UPDATE INV00018
		SET MESCOD = (SELECT MESCOD FROM TABCOPYINV00018 WHERE MESCOD = DATA_CURSOR AND NUMEROREVER = IN_NUMERO_REVER),
			MESESTADO = (SELECT MESESTADO FROM TABCOPYINV00018 WHERE MESCOD = DATA_CURSOR AND NUMEROREVER = IN_NUMERO_REVER),
			MESDOCREQ = (SELECT MESDOCREQ FROM TABCOPYINV00018 WHERE MESCOD = DATA_CURSOR AND NUMEROREVER = IN_NUMERO_REVER),
			MESNUMREQ = (SELECT MESNUMREQ FROM TABCOPYINV00018 WHERE MESCOD = DATA_CURSOR AND NUMEROREVER = IN_NUMERO_REVER),
			MESNUMREQ2 = (SELECT MESNUMREQ2 FROM TABCOPYINV00018 WHERE MESCOD = DATA_CURSOR AND NUMEROREVER = IN_NUMERO_REVER), 
			MESNUMREQ3 = (SELECT MESNUMREQ3 FROM TABCOPYINV00018 WHERE MESCOD = DATA_CURSOR AND NUMEROREVER = IN_NUMERO_REVER),
			MESNUMREQ4 = (SELECT MESNUMREQ4 FROM TABCOPYINV00018 WHERE MESCOD = DATA_CURSOR AND NUMEROREVER = IN_NUMERO_REVER),
			MESUSUREQ = (SELECT MESUSUREQ FROM TABCOPYINV00018 WHERE MESCOD = DATA_CURSOR AND NUMEROREVER = IN_NUMERO_REVER),
			MESHORAPED = (SELECT MESHORAPED FROM TABCOPYINV00018 WHERE MESCOD = DATA_CURSOR AND NUMEROREVER = IN_NUMERO_REVER)
		WHERE MESCOD = DATA_CURSOR;

		-- SE CARGAN LOS SIGUIENTES DATOS DE LA CONSULTA
		FETCH CURSOR1 INTO DATA_CURSOR;
	END LOOP;
	CLOSE CURSOR1;

	-- ===========================================================
	-- ELIMINACION DE LOS DAOS DE VEN0104 Y VEN0004
	-- ABRE EL CURSOR
	OPEN CURSOR2(IN_NUMERO_REVER, IN_NUMERO_FACTURA);
	-- SE CARGA EL PRIMER DATO DE LA FILA 
	FETCH CURSOR2 INTO DATA_CURSOR2;
	--CICLO PARA RECORRER LA CONSULTA DEVUELTA
	LOOP
		-- SI NO ENCUNTRA MAS DATOS SALE DEL LOOP
		EXIT WHEN CURSOR2%NOTFOUND;
		-- SE ELIMNAN LOS DATOS EN VEN0104 DE LA MESA X
		DELETE FROM VEN0104
		WHERE PEDNRO = DATA_CURSOR2;
		-- SE ELIMNAN LOS DATOS EN VEN0004 DE LA MESA X
		DELETE FROM VEN0004
		WHERE PEDNRO = DATA_CURSOR2;

		-- SE CARGAN LOS SIGUIENTES DATOS DE LA CONSULTA
		FETCH CURSOR2 INTO DATA_CURSOR2;
	END LOOP;
	CLOSE CURSOR2;
	
	-- ===========================================================
	-- INSERCION DE DATOS EN VEN0104 Y VEN0004
	INSERT INTO VEN0104
	SELECT PEDPAIC, PEDEMPC, PEDCODDOC, PEDNRO, PEDNUMDOC,
		PEDFECH, PEDFECE, COTPAIC, COTEMPC, COTDOCCOD, COTNUMDOC,
		PCLICOD, PCLINOM, PSUCCLI, PSUCCLIN, PFPGCOD, PCLICUP,
		PDIRCOD, PDIRNOM, PEDVENCOD, PEDBODCOD, PEDFAC, PEDLC,
		PEDDEDT, PEDFLE, PEDMODCOD, PEDORDCOM, PEDOTM, PEDTDEOM,
		PEDVFOM, PEDPERENC, PEDPROYEC, PEDTIEENT, PEDCONFLE, PEDAPLPRO,
		PEDFECPRO, PEDVALINS, PEDPORADM, PEDPORIMP, PEDPORUTI, PEDCONCOM1,
		PEDCONCOM2, PEDCONCOM3, PEDCONCOM4, PEDCONCOM5, PEDCONCOM6, PEDCONCOM7,
		PEDIVAFLE, PEDIFOM, PEDDPGL, PEDTIEPRO, PEDTIETRA, PEDFECOBR,
		PSUCCLIDIR, PSUCCLITE, PEDFECCONT, PEDCONOBS, PEDCODPROY, PDIRCIUD,
		USUPAIC, USUEMPC, VENUSUARIO, PEDHORA, MESCOD
	FROM TABCOPYVEN0104
	WHERE NUMEROREVER = IN_NUMERO_REVER;

	INSERT INTO VEN0004
	SELECT PEDPAIC, PEDEMPC, PEDCODDOC, PEDNRO, PEDLIN,
		PEPC, PEC, PEDPROCOD, PEDBODL, CCOCOD, SCOCOD,
		PEDUNI, PEDVAL, PEDVALCPI, PEDPORIVA, PEDVALIVA,
		PEDVALTUN, PEDDREF1, PEDDREF2, PEDPORDV, PEDDVVAL,
		PEDPORDC, PEDDCVAL, PEDPORDP, PEDDRVAL, PEDPORDCP1,
		PEDDCPVAL, PEDPORDCP2, PEDDCP2VAL, PEDSUCDET, CEUCOD,
		SCUCOD, PEDREMC, PEDFACC, PEDVALOM, PEDVIOM, PEDVLOM,
		PEDDVOM, PEDDCOM, PEDDPOM, PEDDCPOM, PEDDCP2OM, PEDOBSDET,
		PEDALIAS, PEDDLPOR, PEDDLVAL, PEDDLVOM, PEDDDPGL, PEDDDVGL,
		PEDDDVGOM, PEDCHECK, PEDSAL
	FROM TABCOPYVEN0004
	WHERE NUMEROREVER = IN_NUMERO_REVER;

	-- =============================================
	-- ELIMINA LOS RESPALDO YA QUE HAN SIDO CARGADOS
	DELETE FROM TABCOPYINV00018
	WHERE NUMEROREVER = IN_NUMERO_REVER;

	DELETE FROM TABCOPYVEN0104
	WHERE NUMEROREVER = IN_NUMERO_REVER;

	DELETE FROM TABCOPYVEN0004
	WHERE NUMEROREVER = IN_NUMERO_REVER;
	COMMIT;
END;