CREATE OR REPLACE PROCEDURE SP_ACOMER_PED_ENTREG_MESUNIDA
 -- =============================================      
 -- Author:  FELIPE SATIZABAL
 -- =============================================
(
    IN_MESA_PRINCIPAL IN NUMBER,
    OUT_CODIGO_MENSAJE OUT NUMBER
)
AS
    
    ARRAY_CODIGOS_EMP PKG_ACOMER_PROCEDURES.TYPE_PEDIDOS_ARRAY; -- ARRAY DE LOS CODIGOS DE LOS CONTAINER
    ARRAY_NUMEROS_PED PKG_ACOMER_PROCEDURES.TYPE_PEDIDOS_ARRAY; -- ARRAY DE LOS NUMEROS DE LOS PEDIDOS    
    V_CONTADOR_ENTREGADOS NUMBER := 0;	  -- IDENTIFICAR SI YA SE HA ENTREGADO UN PEDIDO
    -- CURSOR DE LAS MESAS QUE ESTAN UNIDAS A EL
    DATACURSOR1 NUMBER;
    CURSOR CURSOR1(IN_CURSOR1 NUMBER) IS
        SELECT MESCODUNI
        FROM UNIONMESA
        WHERE MESCOD = IN_CURSOR1;
BEGIN
    OPEN CURSOR1(IN_MESA_PRINCIPAL);
    FETCH CURSOR1 INTO DATACURSOR1;
    LOOP        
        EXIT WHEN CURSOR1%NOTFOUND;
        
                -- ==========================================
        -- LLENA EL ARRAY CON LOS CODIGOS DE LOS CONTAINER
        ARRAY_CODIGOS_EMP(1) := PKG_ACOMER_PROCEDURES.PKG_CONTAINER1;
        ARRAY_CODIGOS_EMP(2) := PKG_ACOMER_PROCEDURES.PKG_CONTAINER2;
        ARRAY_CODIGOS_EMP(3) := PKG_ACOMER_PROCEDURES.PKG_CONTAINER3;
        ARRAY_CODIGOS_EMP(4) := PKG_ACOMER_PROCEDURES.PKG_CONTAINER4;
    
        -- ==========================================
        -- SE LLENA EL ARRAY CON LOS NUMEROS DE PEDIDOS DE LA MESA
        SELECT MESNUMREQ, MESNUMREQ2,
            MESNUMREQ3, MESNUMREQ4
        INTO ARRAY_NUMEROS_PED(1), ARRAY_NUMEROS_PED(2),
            ARRAY_NUMEROS_PED(3), ARRAY_NUMEROS_PED(4)
        FROM INV00018
        WHERE MESCOD = DATACURSOR1;
    
        -- ==========================================
        -- SE HACE EL CONTEO DE CUANTOS PEDIDOS HAN SIDO ENTREGADOS 
        FOR I IN ARRAY_NUMEROS_PED.FIRST..ARRAY_NUMEROS_PED.LAST
        LOOP
            BEGIN
                SELECT NVL(SUM(PEDUNI),0) - NVL(SUM(PEDCHECK),0) + V_CONTADOR_ENTREGADOS TOTAL_ENTREGADOS
                INTO V_CONTADOR_ENTREGADOS
                FROM VEN0004 A
                INNER JOIN VEN0104 B
                    ON A.PEDNRO = B.PEDNRO
                    AND B.PEDEMPC = CAST(ARRAY_CODIGOS_EMP(I) AS CHAR(13))
                    AND B.PEDNUMDOC = CAST(ARRAY_NUMEROS_PED(I) AS CHAR(10));						
            END;
        END LOOP;

        
        FETCH CURSOR1 INTO DATACURSOR1;
    END LOOP;
    
    -- ==========================================
    -- LLENA EL ARRAY CON LOS CODIGOS DE LOS CONTAINER
    ARRAY_CODIGOS_EMP(1) := PKG_ACOMER_PROCEDURES.PKG_CONTAINER1;
    ARRAY_CODIGOS_EMP(2) := PKG_ACOMER_PROCEDURES.PKG_CONTAINER2;
    ARRAY_CODIGOS_EMP(3) := PKG_ACOMER_PROCEDURES.PKG_CONTAINER3;
    ARRAY_CODIGOS_EMP(4) := PKG_ACOMER_PROCEDURES.PKG_CONTAINER4;

    -- ==========================================
    -- SE LLENA EL ARRAY CON LOS NUMEROS DE PEDIDOS DE LA MESA
    SELECT MESNUMREQ, MESNUMREQ2,
        MESNUMREQ3, MESNUMREQ4
    INTO ARRAY_NUMEROS_PED(1), ARRAY_NUMEROS_PED(2),
        ARRAY_NUMEROS_PED(3), ARRAY_NUMEROS_PED(4)
    FROM INV00018
    WHERE MESCOD = CAST(IN_MESA_PRINCIPAL AS NUMBER);

    -- ==========================================
    -- SE HACE EL CONTEO DE CUANTOS PEDIDOS HAN SIDO ENTREGADOS 
    FOR I IN ARRAY_NUMEROS_PED.FIRST..ARRAY_NUMEROS_PED.LAST
    LOOP
        BEGIN
            SELECT NVL(SUM(PEDUNI),0) - NVL(SUM(PEDCHECK),0) + V_CONTADOR_ENTREGADOS TOTAL_ENTREGADOS
            INTO V_CONTADOR_ENTREGADOS
            FROM VEN0004 A
            INNER JOIN VEN0104 B
                ON A.PEDNRO = B.PEDNRO
                AND B.PEDEMPC = CAST(ARRAY_CODIGOS_EMP(I) AS CHAR(13))
                AND B.PEDNUMDOC = CAST(ARRAY_NUMEROS_PED(I) AS CHAR(10));						
        END;
    END LOOP;
    
    IF(V_CONTADOR_ENTREGADOS <> 0) THEN 
        OUT_CODIGO_MENSAJE := 1;
    ELSE
        OUT_CODIGO_MENSAJE := 0;
    END IF;
END;                   