CREATE OR REPLACE PROCEDURE SP_ACOMER_PEDIDOS_ADD
 -- =============================================      
 -- Author:  FELIPE SATIZABAL
 -- =============================================
(	
	IN_PUESTOS_ARRAY IN OUT TYPE_PEDIDOS_ARRAY, 	 -- LOS PUESTOS DE DONDE FUERON SOLICITADOS LOS PEDIDOS
	IN_PRODUCTOS_ARRAY IN  OUT TYPE_PEDIDOS_ARRAY,   -- LOS CODIGOS DE LOS PRODUCTOS QUE SE ESTA PIDIENDO 
	IN_CANTIDAD_ARRAR IN OUT TYPE_PEDIDOS_ARRAY,	 -- LA CANTIDAD PEDIDA POR PRODDUCTO
	IN_TERMINO_ARRAY IN OUT TYPE_PEDIDOS_ARRAY,		 -- TERMINO DE LA COMIDA SI HA DE TENERLA 
	IN_CODIGO_MESERO IN SEG0001.USUCED%TYPE,		 -- CODIGO DEL MESERO 
	IN_CODIGO_MESA IN INV00018.MESCOD%TYPE      	 -- CODIGO DE LA MESA DONDE SE ESTA REALIZANDO DEL PEDIDO 	
)
AS
	V_CODIGO_RESTAURANTE VEN0001.VENEMPC%TYPE;  -- OBTENER Y PASAR CODIGOS DE LOS RESTAURANTES RESULTANTES DE LOS PRODUCTOS
	V_CODIGO_PEDIDOS_OUT  VEN0104.PEDNRO%TYPE; 	-- VARIABLE DE SALIDA DEL PROCEDIMIENTO SP_ACOMER_PEDIDOS_CAB	
	V_CONTADOR NUMBER := 0; 		   			-- CONTADOR PARA TENER LA CANTIDAD DE PEDIDOS
	V_VALIDACION NUMBER;						-- VALIDACION DE DATOS
	ARRAY_PEDIDOS_NEW TYPE_PEDIDOS_ARRAY; -- POSICION DE LOS ITEM DE RESTAURANTES QUE NO TIENEN PEDIDOS	
	V_BOOLEAN BOOLEAN := FALSE; 
BEGIN
-- =============================================
-- VALIDA QUE LA MESA INSERTADA EXISTE
	SELECT COUNT(*)
	INTO V_VALIDACION
	FROM INV00018
	WHERE MESCOD = IN_CODIGO_MESA;

	IF(V_VALIDACION = 0) THEN
		BEGIN
			RAISE_APPLICATION_ERROR(-20001, 'LA MESA INGRESADA "'||IN_CODIGO_MESA||'" NO ES VALIDA.');
		END;
	END IF;

-- =============================================
-- VALIDA QUE LOS PUESTOS SI EXISTEN 
	FOR I IN IN_PUESTOS_ARRAY.FIRST..IN_PUESTOS_ARRAY.LAST
	LOOP
		SELECT COUNT(*)
		INTO V_VALIDACION
		FROM GEN0009
		WHERE CCOCOD = CAST(IN_PUESTOS_ARRAY(I) AS CHAR(3));
		
		IF(V_VALIDACION = 0) THEN
			BEGIN
				RAISE_APPLICATION_ERROR(-20001, 'EL PUESTO INGRESADO "'||IN_PUESTOS_ARRAY(I)||'" NO ES VALIDO.');
			END;
		END IF;
	END LOOP;

-- =============================================
-- VALIDA QUE LOS PRODUCTOS SI EXISTEN 
	FOR I IN IN_PRODUCTOS_ARRAY.FIRST..IN_PRODUCTOS_ARRAY.LAST
	LOOP
		SELECT COUNT(*)
		INTO V_VALIDACION
		FROM VEN0001
		WHERE PROCOD = CAST(IN_PRODUCTOS_ARRAY(I) AS CHAR(20));
		
		IF(V_VALIDACION = 0) THEN
			BEGIN
				RAISE_APPLICATION_ERROR(-20001, 'EL ITEM INGRESADO "'||IN_PRODUCTOS_ARRAY(I)||'" NO ES VALIDO.');
			END;
		END IF;
	END LOOP;

-- =============================================
-- COMPRAR LOS PEDIDOS DE LOS RESTAURANTES DE LA MESAS	
	DECLARE
		V_NUMDOC1 INV00018.MESNUMREQ%TYPE;
		V_NUMDOC2 INV00018.MESNUMREQ2%TYPE;
		V_NUMDOC3 INV00018.MESNUMREQ3%TYPE;
		V_ESTADO VARCHAR2(1);
		V_CONTADOR NUMBER := 1;
	BEGIN
		-- SE CONSULTA LOS NUMEROS DE PEDIDOS QUE TIENE LA MESA ACTUALMENTE
		SELECT MESNUMREQ,MESNUMREQ2,
		    MESNUMREQ3
		INTO V_NUMDOC1, V_NUMDOC2,
			V_NUMDOC3
		FROM INV00018
		WHERE MESCOD = IN_CODIGO_MESA;

		FOR I IN IN_PRODUCTOS_ARRAY.FIRST..IN_PRODUCTOS_ARRAY.LAST
		LOOP
			-- CONSULTA EL CODIGO DEL RESTAURANTE AL QUE PERTENECE EL PRODUCTO 
			SELECT VENEMPC
			INTO V_CODIGO_RESTAURANTE
			FROM VEN0001
			WHERE PROCOD = CAST(IN_PRODUCTOS_ARRAY(I) AS CHAR(20));

			-- COMPARA QUE EL RESTAURANTE AL QUE PERTENECE EL ELEMENTO PEDIDO, TENGA PEDIDO EN LA MESA
			BEGIN
				SELECT DISTINCT '1' ESTADO
				INTO V_ESTADO
			    FROM DUAL
			    WHERE V_CODIGO_RESTAURANTE IN (SELECT PEDEMPC
			                                   FROM VEN0104 
			                                   WHERE PEDNUMDOC IN (V_NUMDOC1,V_NUMDOC2,V_NUMDOC3)
			                                        AND MESCOD = IN_CODIGO_MESA);
			EXCEPTION
				WHEN NO_DATA_FOUND THEN
					V_ESTADO := '0';
			END;
			-- SI YA HAY UN PEDIDO A ESE RESTAURANTE SE AGREGA EL ITEM A ESE PEDIDO 
			CASE V_ESTADO
				WHEN '1' THEN 	
					DECLARE
						V_PEDNRO VEN0104.PEDNRO%TYPE; -- ALMACENARA EL CODIGO DEL PEDIDO	
						V_REPETIDO NUMBER;			  -- VERIFICAR QUE 	
					BEGIN
						-- CONSULTO EL NUMERO DEL PEDIDO QUE TIENE ESA MESA EN EL RESTAURANTE 
						SELECT PEDNRO
						INTO V_PEDNRO
						FROM VEN0104
						WHERE PEDEMPC = V_CODIGO_RESTAURANTE 
						    AND PEDNUMDOC IN (V_NUMDOC1,V_NUMDOC2,V_NUMDOC3);

						-- CONSULTO SI EL ITEM YA HA SIDO PEDIDO O ES PRIMERA VEZ EN LA MESA Y EL PUESTO
						SELECT COUNT(*)
						INTO V_REPETIDO
						FROM VEN0004
						WHERE PEDPROCOD = CAST(IN_PRODUCTOS_ARRAY(I) AS CHAR(20))
            				AND PEDNRO = V_PEDNRO
            				AND CCOCOD = CAST(IN_PUESTOS_ARRAY(I) AS CHAR(20));

            			--RAISE_APPLICATION_ERROR(-20001, 'CANTIDAD: '||TO_CHAR(V_REPETIDO));
            			-- SI ESTA REPETIDO SE ACTUALIZA , SI NO SE AGREGA AL PEDIDO EL NUEVO ITEM
            			IF(V_REPETIDO = 1) THEN
            				BEGIN
            					SP_ACOMER_PEDIDOS_ACT(
            						IN_PRODUCTOS_ARRAY(I),
            						V_PEDNRO, 
            						IN_PUESTOS_ARRAY(I),
            						IN_CANTIDAD_ARRAR(I));
            				END;
            			ELSE 
            				BEGIN
            					SP_ACOMER_PEDIDOS_DET(
            						V_CODIGO_RESTAURANTE,
	            					'PD',
	            					V_PEDNRO,
	            					IN_PRODUCTOS_ARRAY(I),
	            					IN_TERMINO_ARRAY(I),
	            					IN_PUESTOS_ARRAY(I),
	            					IN_CANTIDAD_ARRAR(I),
	            					IN_CODIGO_MESERO);
            				END;
            			END IF;
					END;

				ELSE
					BEGIN
						V_BOOLEAN := TRUE;
						V_CONTADOR := V_CONTADOR + 1;
						ARRAY_PEDIDOS_NEW(V_CONTADOR) := I;							
					END;
			END CASE;
		END LOOP;

		-- SE AGREGAN LAS NUEVAS CABECERAS DE NO EXISTIR UN PEDIDO EN EL RESTAURANTE
		IF(V_BOOLEAN) THEN
			DECLARE
				ARRAY_PUESTOS TYPE_PEDIDOS_ARRAY;
				ARRAY_PRODUCTOS TYPE_PEDIDOS_ARRAY;
				ARRAY_CANTIDAD TYPE_PEDIDOS_ARRAY;
				ARRAY_TERMINO TYPE_PEDIDOS_ARRAY;
			BEGIN
				-- SE ASIGNAN LOS PEDIDOS QUE NO TIENE UNA CABECERA EN PEDIDO 
				FOR I IN ARRAY_PEDIDOS_NEW.FIRST..ARRAY_PEDIDOS_NEW.LAST
				LOOP
					ARRAY_PUESTOS(I) := IN_PUESTOS_ARRAY(ARRAY_PEDIDOS_NEW(I));
					ARRAY_PRODUCTOS(I) := IN_PRODUCTOS_ARRAY(ARRAY_PEDIDOS_NEW(I));
					ARRAY_CANTIDAD(I) := IN_CANTIDAD_ARRAR(ARRAY_PEDIDOS_NEW(I));
					ARRAY_TERMINO(I) := IN_TERMINO_ARRAY(ARRAY_PEDIDOS_NEW(I));
				END LOOP;

				--SE EJECUTA EL PROCEDIMIENTO DESDE CERO
				SP_ACOMER_PEDIDOS(ARRAY_PUESTOS,ARRAY_PRODUCTOS,ARRAY_CANTIDAD,ARRAY_TERMINO,IN_CODIGO_MESERO,IN_CODIGO_MESA);

			END;
		END IF;
	END;
END;