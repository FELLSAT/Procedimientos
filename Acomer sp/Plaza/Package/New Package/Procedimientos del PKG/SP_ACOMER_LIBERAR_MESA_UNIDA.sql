create or replace PROCEDURE SP_ACOMER_LIBERAR_MESA_UNIDA
 -- =============================================      
 -- Author:  FELIPE SATIZABAL
 -- =============================================
(
	IN_CODIGO_MESA IN VEN0104.MESCOD%TYPE 	-- CODIGO DE LA MESA DEL PEDIDO 	
)
AS
	V_MESA_PRINCIPAL UNIONMESA.MESCOD%TYPE; -- MESA PRINCIPAL
	V_CONTADOR_GLOBAL NUMBER := 0; -- CANTIDAD DE PUESTOS QUE FALTA POR FACTURAR
	V_CODIGO_PEDIDO TYPE_PEDIDOS_ARRAY; -- CODIGO DE LOS PEDIDOS QUE HAY EN MESA
	V_MESA_UNIDA NUMBER;
	-- CURSOR DE LAS MESAS UNIDAS A LA PRINCIPAL
	CURSOR CUR_UNIDAS IS 
		SELECT DISTINCT MESCODUNI
		FROM UNIONMESA
		WHERE MESCOD = IN_CODIGO_MESA
			OR MESCODUNI = IN_CODIGO_MESA;
	CV_MESA_UNIDA UNIONMESA.MESCODUNI%TYPE;	-- VARIABLE QUE RECIBE EL LOS DATOS RETORNADOS EN EL CURSOS	
BEGIN
	-- SABER SI ES UNA MESA QUE ESTA UIDA A OTRA O ES SOLA
	SELECT COUNT(*)
	INTO V_MESA_UNIDA
	FROM UNIONMESA
	WHERE MESCOD = IN_CODIGO_MESA
	  	OR MESCODUNI = IN_CODIGO_MESA;

	-- SI ES UNA MESA UIDA A OTRA REALIZA LA ACCION
	IF(V_MESA_UNIDA > 0) THEN 
		-- CONSULTA CUAL ES LA MESA PRNCIPAL 
	    SELECT DISTINCT MESCOD
	    INTO V_MESA_PRINCIPAL
		FROM UNIONMESA
		WHERE MESCOD = IN_CODIGO_MESA
			OR MESCODUNI = IN_CODIGO_MESA;

		OPEN CUR_UNIDAS;
		-- OBTENER LOS DATOS FILA POR FILA 
		FETCH CUR_UNIDAS INTO CV_MESA_UNIDA;
		-- CICLO PARA LEER LOS DATOS DEVUELTOS EN EL CURSOR
		WHILE CUR_UNIDAS%FOUND 
		LOOP
			-- SI ES DISTINTO DE LA MESA QUE INGRESA
			IF(CV_MESA_UNIDA <> IN_CODIGO_MESA) THEN
				BEGIN
					SELECT 
						CASE NVL(MESNUMREQ, 'SIN_PEDIDO')
							WHEN 'SIN_PEDIDO' THEN 0
							ELSE 1
						END +
						CASE NVL(MESNUMREQ2, 'SIN_PEDIDO')
							WHEN 'SIN_PEDIDO' THEN 0
							ELSE 1
						END +
						CASE NVL(MESNUMREQ3, 'SIN_PEDIDO')
							WHEN 'SIN_PEDIDO' THEN 0
							ELSE 1
						END +
						CASE NVL(MESNUMREQ4, 'SIN_PEDIDO')
							WHEN 'SIN_PEDIDO' THEN 0
							ELSE 1
						END +
						V_CONTADOR_GLOBAL CANTIDAD_PEDIDO 
					INTO V_CONTADOR_GLOBAL
					FROM INV00018
					WHERE MESCOD = CV_MESA_UNIDA;
				END;
			END IF;

			-- OBTENER LOS DATOS FILA POR FILA 
			FETCH CUR_UNIDAS INTO CV_MESA_UNIDA;
		END LOOP;
		-- CIERRA EL CURSRO
		CLOSE CUR_UNIDAS;

		SELECT 
			CASE NVL(MESNUMREQ, 'SIN_PEDIDO')
				WHEN 'SIN_PEDIDO' THEN 0
				ELSE 1
			END +
			CASE NVL(MESNUMREQ2, 'SIN_PEDIDO')
				WHEN 'SIN_PEDIDO' THEN 0
				ELSE 1
			END +
			CASE NVL(MESNUMREQ3, 'SIN_PEDIDO')
				WHEN 'SIN_PEDIDO' THEN 0
				ELSE 1
			END +
			CASE NVL(MESNUMREQ4, 'SIN_PEDIDO')
				WHEN 'SIN_PEDIDO' THEN 0
				ELSE 1
			END +
			V_CONTADOR_GLOBAL CANTIDAD_PEDIDO 
		INTO V_CONTADOR_GLOBAL
		FROM INV00018
		WHERE MESCOD = V_MESA_PRINCIPAL;

		-- SI LA CANTIDAD DE PEDIDOS PENDIENTES EES MAYOR A CERO SE LIBERA LA MESA ACTUAL PERO SE DEJA OCUPADA PARA CONSERVAR LA UNIOIN
		IF(V_CONTADOR_GLOBAL > 0) THEN
			BEGIN
				UPDATE INV00018
				SET MESESTADO = 'Ocupado',					
					MESDOCREQ = 'PD',
					MESNUMREQ = '',
					MESNUMREQ2 = '',
					MESNUMREQ3 = '',
					MESNUMREQ4 = '',
					MESUSUREQ = '',
					MESHORAPED = TO_CHAR(SYSDATE,'HH24:MI:SS')
				WHERE MESCOD = IN_CODIGO_MESA;
			END;
		-- SI LA CANTIDAD DE PEDIDOS ES CERO SE LIBERAN TODAS LAS MESAS
		ELSIF(V_CONTADOR_GLOBAL = 0) THEN
			BEGIN
				OPEN CUR_UNIDAS;
				-- OBTENER LOS DATOS FILA POR FILA 
				FETCH CUR_UNIDAS INTO CV_MESA_UNIDA;
				-- CICLO PARA LEER LOS DATOS DEVUELTOS EN EL CURSOR
				WHILE CUR_UNIDAS%FOUND 
				LOOP				
					
					BEGIN
						UPDATE INV00018
						SET MESESTADO = 'Activo',
							MESDOCREQ = '',
							MESNUMREQ = '',
							MESNUMREQ2 = '',
							MESNUMREQ3 = '',
							MESNUMREQ4 = '',
							MESUSUREQ = '',
							MESHORAPED = ''
						WHERE MESCOD = CV_MESA_UNIDA;

						UPDATE DETMESA
						SET PUESTOS = 0
						WHERE MESCOD = CV_MESA_UNIDA;
					END;
					

					-- OBTENER LOS DATOS FILA POR FILA 
					FETCH CUR_UNIDAS INTO CV_MESA_UNIDA;
				END LOOP;
				-- CIERRA EL CURSRO
				CLOSE CUR_UNIDAS;

				-- LIBERA LA MESA PRINCIPAL
				UPDATE INV00018
				SET MESESTADO = 'Activo',
					MESDOCREQ = '',
					MESNUMREQ = '',
					MESNUMREQ2 = '',
					MESNUMREQ3 = '',
					MESNUMREQ4 = '',
					MESUSUREQ = '',
					MESHORAPED = ''
				WHERE MESCOD = V_MESA_PRINCIPAL;

				-- LIBERANDO LOS PUESTOS DE LA MESA
				UPDATE DETMESA
				SET PUESTOS = 0
				WHERE MESCOD = V_MESA_PRINCIPAL;

				-- SE ELIMNA LA UNION DE LA MESA }
				DELETE FROM UNIONMESA
				WHERE MESCOD = V_MESA_PRINCIPAL;
			END;
		END IF;
	END IF;
END;