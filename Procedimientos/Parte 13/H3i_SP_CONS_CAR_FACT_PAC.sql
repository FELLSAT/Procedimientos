CREATE OR REPLACE PROCEDURE H3i_SP_CONS_CAR_FACT_PAC
 -- =============================================      
 -- Author:  FELIPE SATIZABAL
 -- =============================================
(
    v_NO_HISTORIA IN VARCHAR2,
    v_ES_CARGO IN NUMBER,
    cv_1 OUT SYS_REFCURSOR,
    cv_2 OUT SYS_REFCURSOR
)
AS
   v_VALFACPAC NUMBER(1,0);

BEGIN

    SELECT  CASE UTILS.CONVERT_TO_VARCHAR2(CON.VL_VALO_CONT,30)
                WHEN '1' THEN 1
                ELSE 0
            END 

    INTO v_VALFACPAC
    FROM CONTROL CON
    WHERE CON.CD_CONC_CONT = 'VALFACPAC';
   
   DELETE FROM tt_CARGOS_PAC;
   UTILS.IDENTITY_RESET('tt_CARGOS_PAC');
   
   INSERT INTO tt_CARGOS_PAC ( 
   	SELECT MOV.NU_NUME_MOVI ,
           MOV.NU_TIPO_MOVI ,
           MOV.FE_FECH_MOVI ,
           --[ESP].[NO_NOMB_ESP],
           ESP.CD_CODI_ESP ,
           MED.NO_NOMB_MED ,
           MOV.VL_UNID_MOVI ,
           MOV.VL_COPA_MOVI ,
           EPS.NO_NOMB_EPS ,
           EPS.CD_NIT_EPS ,
           CON.CD_CODI_CONV ,
           CON.CD_NOMB_CONV ,
           MOV.NU_NUME_REG_MOVI ,
           MOV.NU_NUME_CONV_MOVI ,
           MOV.CD_CODI_LUAT_MOVI ,
           NVL(MOV.CD_CODI_CECO_MOVI, '10') CD_CODI_CECO_MOVI  ,
           MOV.CD_CODI_CECO_INV ,
           MOV.NU_HIST_PAC_MOVI ,
           NVL(MOV.NU_ADSCR_LIQUI, 0) NU_ADSCR_LIQUI  ,
           CASE ( SELECT COUNT(MOVI_CARGOS.NU_NUME_MOVI)  
                  FROM ( ( LABORATORIO LABORATORIO
                           JOIN MOVI_CARGOS MOVI_CARGOS   ON ( LABORATORIO.NU_NUME_MOVI_LABO = MOVI_CARGOS.NU_NUME_MOVI )
                            ) 
                         JOIN R_LABO_AUTO R_LABO_AUTO   ON ( R_LABO_AUTO.NU_NUME_LABO_LAAU = LABORATORIO.NU_NUME_LABO )
                          ) 
                         JOIN AUTORIZACION_ADSCRITOS AUTORIZACION_ADSCRITOS   ON ( R_LABO_AUTO.NU_AUTO_AUAD_LAAU = AUTORIZACION_ADSCRITOS.NU_AUTO_AUAD )
                   WHERE  MOVI_CARGOS.NU_NUME_MOVI = MOV.NU_NUME_MOVI )
                                                                       WHEN 0 THEN 'NO'
           ELSE 'SI'
              END AUTORIZADO  ,
           ( SELECT CD_IDEN_READ 
             FROM AUTORIZACION_ADSCRITOS 
                    JOIN R_LABO_AUTO    ON NU_AUTO_AUAD_LAAU = NU_AUTO_AUAD
                    JOIN REGISTRO_ADSCRITO    ON CD_CODI_AUTORIZA_AUAD = TXT_COD_BARRA_READ
              
             --INNER JOIN ADSCRITOS ON CD_CODIGO_ADSC = CD_CODI_ADSC_AUAD

             --INNER JOIN CONVENIO_ADSC ON CD_CODI_COAD = CD_CODI_COAD_AUAD
             WHERE  NU_NUME_LABO_LAAU = NU_NUME_LABO AND ROWNUM <= 1 ) ID_AUTORIZACION  
   	  FROM HIMS2.MOVI_CARGOS MOV
           --  INNER JOIN
            --   [dbo].[MEDICOS] AS MED
            --ON [MED].[CD_CODI_MED] = [MOV].[CD_MEDI_ORDE_MOVI]

             JOIN HIMS2.LABORATORIO LAB   ON LAB.NU_NUME_MOVI_LABO = MOV.NU_NUME_MOVI
             AND MOV.NU_HIST_PAC_MOVI = v_NO_HISTORIA
             AND MOV.NU_ESTA_MOVI <> 2 -- SE EXCLUYEN LOS ANULADOS

             AND MOV.NU_NUME_FACO_MOVI = 0 -- SE INCLUYEN LOS QUE NO TIENEN FACTURA DE CONTADO

             AND MOV.NU_NUME_FAC_MOVI = 0 -- SE INLUYEN LOS QUE NO TIENEN FACTURA A CREDITO

             JOIN HIMS2.MEDICOS MED   ON LAB.CD_CODI_MEDI_LABO = MED.CD_CODI_MED
             JOIN HIMS2.ESPECIALIDADES ESP   ON ESP.CD_CODI_ESP = LAB.CD_CODI_ESP_LABO
             JOIN HIMS2.CONVENIOS CON   ON MOV.NU_NUME_CONV_MOVI = CON.NU_NUME_CONV
             JOIN HIMS2.EPS EPS   ON CON.CD_NIT_EPS_CONV = EPS.CD_NIT_EPS
   	  GROUP BY MOV.NU_NUME_MOVI,MOV.NU_TIPO_MOVI,MOV.FE_FECH_MOVI
               --[ESP].[NO_NOMB_ESP],
               ,ESP.CD_CODI_ESP,MED.NO_NOMB_MED,MOV.VL_UNID_MOVI,MOV.VL_COPA_MOVI,EPS.NO_NOMB_EPS,EPS.CD_NIT_EPS,CON.CD_CODI_CONV,CON.CD_NOMB_CONV,MOV.NU_NUME_REG_MOVI,MOV.NU_NUME_CONV_MOVI,MOV.CD_CODI_LUAT_MOVI,NVL(MOV.CD_CODI_CECO_MOVI, '10'),MOV.CD_CODI_CECO_INV,MOV.NU_HIST_PAC_MOVI,MOV.NU_ADSCR_LIQUI,NU_NUME_LABO );
   --
   -- SELECCIONAR LOS LABORATORIOS CORRESPONDIENTES A LOS CARGOS FACTURABLES
   --
   DELETE FROM tt_LABORATORIOS_PAC;
   UTILS.IDENTITY_RESET('tt_LABORATORIOS_PAC');
   
   INSERT INTO tt_LABORATORIOS_PAC ( 
   	SELECT LAB.NU_NUME_LABO ,
           LAB.NU_NUME_MOVI_LABO ,
           LAB.CD_CODI_SER_LABO ,
           LAB.CT_CANT_LABO ,
           LAB.VL_UNID_LABO ,
           LAB.VL_COPA_LABO ,
           LAB.ID_ESTA_ASIS_LABO ,
           SER.NO_NOMB_SER ,
           MED.NO_NOMB_MED ,
           LAB.CD_CODI_ESP_LABO ,
           LAB.CD_CODI_MEDI_LABO ,
           LAB.NU_AUTO_LABO ,
           SER.CD_CODI_COSE_SER 
   	  FROM HIMS2.LABORATORIO LAB
             JOIN tt_CARGOS_PAC CAR   ON LAB.NU_NUME_MOVI_LABO = CAR.NU_NUME_MOVI
             AND LAB.NU_ESTA_LABO <> 2
             JOIN HIMS2.SERVICIOS SER   ON SER.CD_CODI_SER = LAB.CD_CODI_SER_LABO
             JOIN HIMS2.MEDICOS MED   ON LAB.CD_CODI_MEDI_LABO = MED.CD_CODI_MED );
   --
   IF v_VALFACPAC = 0 THEN
    
   BEGIN
      DBMS_OUTPUT.PUT_LINE('@VALFACPAC=' || UTILS.CONVERT_TO_VARCHAR2(v_VALFACPAC,30));
      IF v_ES_CARGO = 1 THEN
       
      BEGIN
         OPEN  cv_1 FOR
            SELECT * 
              FROM tt_CARGOS_PAC  ;
      
      END;
      ELSE
      
      BEGIN
         OPEN  cv_1 FOR
            SELECT * 
              FROM tt_LABORATORIOS_PAC  ;
      
      END;
      END IF;
   
   END;
   END IF;
   IF v_VALFACPAC = 1 THEN
    
   BEGIN
      DBMS_OUTPUT.PUT_LINE('@VALFACPAC=' || UTILS.CONVERT_TO_VARCHAR2(v_VALFACPAC,30));
      IF v_ES_CARGO = 1 THEN
       
      BEGIN
         OPEN  cv_2 FOR
            SELECT MOV.* 
              FROM tt_CARGOS_PAC MOV
                     JOIN tt_LABORATORIOS_PAC LAB   ON LAB.NU_NUME_MOVI_LABO = MOV.NU_NUME_MOVI
             WHERE  LAB.ID_ESTA_ASIS_LABO = '1' ;
      
      END;
      ELSE
      
      BEGIN
         OPEN  cv_2 FOR
            SELECT LAB.* 
              FROM tt_CARGOS_PAC MOV
                     JOIN tt_LABORATORIOS_PAC LAB   ON LAB.NU_NUME_MOVI_LABO = MOV.NU_NUME_MOVI
             WHERE  LAB.ID_ESTA_ASIS_LABO = '1' ;
      
      END;
      END IF;
   
   END;
   END IF;

EXCEPTION WHEN OTHERS THEN utils.handleerror(SQLCODE,SQLERRM);
END;